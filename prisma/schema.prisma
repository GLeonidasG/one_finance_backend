// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src"
  outputToNestJsResourceStructure = "true"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  ID       Int    @id @default(autoincrement())
  username String
  email    String @unique
  password String
  balance  Float

  /// @DtoReadOnly
  createdAt DateTime @default(now())
  /// @DtoReadOnly
  updatedAt DateTime @default(now())

  /// @DtoCreateOptional
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  /// @DtoRelationCanCreateOnUpdate
  /// @DtoRelationCanConnectOnUpdate
  cards Card[]
}

model Card {
  ID        Int      @id @default(autoincrement())
  name      String
  cardID    String   @unique
  validFrom DateTime
  validThru DateTime

  /// @DtoCreateOptional
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  /// @DtoRelationCanCreateOnUpdate
  /// @DtoRelationCanConnectOnUpdate
  records Record[]

  belongsToUserID Int
  /// @DtoRelationRequired
  belongsToUser   User? @relation(fields: [belongsToUserID], references: [ID])
}

model Record {
  ID          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  value       Float
  entryDate   DateTime

  recordsFromCardId Int
  /// @DtoRelationRequired
  recordsFromCard   Card? @relation(fields: [recordsFromCardId], references: [ID])
}
